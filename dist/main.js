(()=>{class t{constructor(t,e,s,r){this.title=t,this.description=e,this.status=s,this.colorCode=r}getTitle(){return this.title}getDescription(){return this.description}getStatus(){return this.status}getColorCode(){return this.colorCode}}class e{constructor(t,e,s){this.title=t,this.description=e,this.tasks=[],this.colorCode=s}addTask(e,s,r){this.tasks.push(new t(e,s,r))}addTask(t){this.tasks.push(t)}length(){return this.tasks.length}deleteTask(t){this.tasks.splice(t,1)}}let s=[],r=new e("Default Project","This is a default project","red");s.push(r);let o=new t("Default Task","This is a default task","In Progress","red");function c(){const t=document.querySelector(".project-list"),e=document.createElement("div");e.classList.add("project-card"),t.appendChild(e);for(let t=0;t<s.length;t++)e.innerHTML=`\n        <div class="project-card">\n        <p class="project-title">${s[t].title}</p>\n    </div>`}function n(t){const e=document.querySelector(".to-do"),s=document.querySelector(".in-progress"),r=document.querySelector(".completed");e.innerHTML="",s.innerHTML="",r.innerHTML="";for(let o=0;o<t.length();o++){const c=`<div class="task-card"><p>${t.tasks[o].title}</p>\n        <p>${t.tasks[o].description}</p>\n        <p>${t.tasks[o].colorCode}</p></div>`;"To Do"===t.tasks[o].getStatus()?e.innerHTML+=c:"In Progress"===t.tasks[o].getStatus()?s.innerHTML+=c:"Completed"===t.tasks[o].getStatus()&&(r.innerHTML+=c)}}r.addTask(o);const i=document.querySelector(".modal");document.querySelector(".close").addEventListener("click",(()=>{i.style.display="none"})),document.querySelector(".add-project").addEventListener("click",(()=>{i.style.display="block"})),document.querySelector(".project-submit").addEventListener("click",(t=>{const r=document.querySelector("#project-title").value,o=document.querySelector("#project-description").value,i=document.querySelector("#project-color").value;t.preventDefault(),s.push(new e(r,o,i)),c(),n(s[s.length-1])})),c(),n(r)})();