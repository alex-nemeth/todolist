(()=>{class t{constructor(t,e,s){this.title=t,this.description=e,this.colorCode=s}}let e=[],s=new class{constructor(t,e,s){this.title=t,this.description=e,this.tasks=[],this.colorCode=s}addTask(e,s,c){this.tasks.push(new t(e,s,c))}deleteTask(t){this.tasks.splice(t,1)}}("Default Project","This is a default project","red");e.push(s);let c=new t("Default Task","This is a default task","red");s.tasks.push(c);const o=document.getElementById("modal");document.querySelector(".close").addEventListener("click",(()=>{o.style.display="none"})),document.querySelector(".add-project").addEventListener("click",(()=>{o.style.display="block"})),document.querySelector(".project-submit").addEventListener("click",(t=>{t.preventDefault(),e.addProject()})),function(t){const e=document.querySelector(".project-list"),s=document.createElement("div");s.classList.add("project-card"),e.appendChild(s);for(let e=0;e<t.length;e++)s.innerHTML=`\n        <div class="project-card">\n        <p class="project-title" onclick="">${t[e].title}</p>\n    </div>`}(e),function(t){const e=document.querySelector(".to-do");for(let t=0;t<s.tasks.length;t++)e.innerHTML=`<p>${s.tasks[t].title}</p>\n        <p>${s.tasks[t].description}</p>\n        <p>${s.tasks[t].colorCode}</p>`}()})();